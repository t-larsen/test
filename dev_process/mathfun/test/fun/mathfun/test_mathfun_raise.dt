# Import function to be tested via doctest
>>> from fun.mathfun import f

# Import of support modules/packages
>>> import os
>>> import numpy as np


#----------------------------------------------------------------------------
# Check input data
#----------------------------------------------------------------------------
>>> f('nonsense.dat', state='clean', f_name=999)   # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: Input (...) must be a float or int.


>>> f_name = 'test/fun/mathfun/test_mathfun_func_A.dat'
>>> f([2, 3.1], state='clean', f_name=f_name)   # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: Input (...) must be a float or int.


>>> f(0.1, state='clean', f_name=999)   # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: Input (...) must be a str.


>>> test_name = 'test/fun/mathfun/test_mathfun_func_A.dat'
>>> f(0.1, state='wrongstate', f_name=test_name)   # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
NameError: Wrong value (...) for 'state'.


#----------------------------------------------------------------------------
# I/O
#----------------------------------------------------------------------------
>>> test_name = 'test/fun/mathfun/test_mathfun_func_A.dat'
>>> round(f(np.pi/2, state='clean', f_name=test_name), 10)
7.3890560989
>>> round(f(-np.pi/5, state='append', f_name=test_name), 10)
1.5101587046
>>> oracle = 'test/fun/mathfun/oracle_mathfun_func_A.dat'
>>> np.allclose(np.loadtxt(oracle), np.loadtxt(test_name))
True
>>> os.remove(test_name) if os.path.isfile(test_name) else None



